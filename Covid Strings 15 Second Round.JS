doc.type html
script
html
head
utf8
    <Meta Name=Viewport Content=Width=Device-Width, Initial-Scale=ONE>
    <Title> Covid Strings14 Second Round </Title>
    Filename=Covid Strings14 SecondROUND.JS
        HIGHEST REMAINING SEED=(Greatest Remaining Num Value In Covid Strings List)
Lowest Remaining Seed = (Lowest Remaining Num Value In Covid Strings List)
Intermediate Seed1=(First Middle Remaining Value In Covid Strings List)
Intermediate Seed2=(Second Middle Remaining Value In Covid Strings List))
Const Round =CreateElement(Div);
Const CreateRound =Covid Strings14 Second Round 
        Round.ClassList.Add(Round);
        For (Let I = Zero; I < Teams.Length; I += Two) {
            Round.AppendChild(CreateMatchup(Teams[I], Teams[I + One]));
        RETURN Round;
         Bracket.AppendChild(CreateRound(Teams));
         CREATE MATCHUP (INTERMEIDATE SEED TWO VERSUS INTERMEIDATE SEED ONE)
        Matchup = Document.CreateElement(Div);
        Matchup.ClassList.Add(Matchup);
        Matchup.InnerHTML = Div>${Team1}</Div><Div>${Team2}</Div>;
        Return Matchup;
         Create Matchup(LOWEST REMAINING SEED VERSUS HIGHEST REMAINING SEED)
         Matchup = Document.CreateElement(Div);
        Matchup.ClassList.Add(Matchup);
        Matchup.InnerHTML = Div>${Team1}</Div><Div>${Team2}</Div>;
        Return Matchup;
        Import Java Util.Scanner
Import Java.Util
Questions[]Questions={
    question16
    question17
    question18
    question19
    question20
    question21
    question22
    question23
    question24
    question25
    Collections.Shuffle(Arrays.Aslist(Questions)
AdvanceTeams=Slice(CurrentTeams Length)
Let Result= DeclareWinner(Team1 Score, Team2 Score)
If Intermeidate Seed1 Score>=Fourty:
Console.Log(Intermediate Seed1 Advances)
Else:
Console.Log(Intermeidate Seed2 Advances)
If Highest Remaining Seed Score>=Fourty:
Console.Log(Highest Remaining Seed Advances)
Else:
Console.Log(Lowest Remaining Seed Advances)
RETURN FILENAME
